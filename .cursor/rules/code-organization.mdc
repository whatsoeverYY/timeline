---
description: 
globs: 
alwaysApply: false
---
---
description: 代码组织结构和命名规范
alwaysApply: true
---

# 代码组织和命名规范

## 项目结构
- 按功能模块组织代码结构
- 使用 `composables/` 目录存放组合式函数
- 使用 `components/` 目录存放可复用组件
- 使用 `views/` 或 `pages/` 目录存放页面组件
- 使用 `types/` 目录存放类型定义
- 使用 `utils/` 目录存放工具函数

## 命名规范
- 变量和函数使用 camelCase
- 常量使用 SCREAMING_SNAKE_CASE
- 组件名使用 PascalCase
- 文件名保持一致的命名风格
- 事件处理函数以 `handle` 或 `on` 开头

## 文件组织原则
- 每个文件应该有单一职责
- 相关的功能放在同一目录下
- 使用 index 文件作为模块的入口点
- 保持目录层级简洁，避免过深的嵌套

## 导入导出规范
- 使用命名导入优于默认导入
- 按类型分组导入语句（第三方库、本地模块等）
- 使用路径别名简化导入路径
- 避免循环依赖
