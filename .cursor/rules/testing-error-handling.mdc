---
description: 
globs: 
alwaysApply: false
---
---
description: 单元测试和错误处理最佳实践
alwaysApply: false
---

# 测试和错误处理

## 单元测试
- 为关键业务逻辑编写单元测试
- 使用 Vitest 作为测试框架
- 测试组件的行为而非实现细节
- 使用 Vue Testing Utils 进行组件测试
- 保持测试的独立性和可重复性

## 错误处理
- 使用 `try-catch` 包装可能出错的异步操作
- 提供有意义的错误信息
- 使用 Vue 的错误边界处理组件错误
- 避免静默忽略错误
- 实现全局错误处理机制

## 测试策略
- 编写单元测试覆盖核心逻辑
- 使用集成测试验证组件交互
- 模拟外部依赖和 API 调用
- 测试异常情况和边界条件

## 错误监控
- 实现错误日志记录
- 使用错误监控服务
- 为用户提供友好的错误提示
- 建立错误恢复机制
