---
description: 
globs: 
alwaysApply: false
---
---
description: TypeScript 开发规范和类型定义标准
globs: ["**/*.ts", "**/*.vue"]
alwaysApply: false
---

# TypeScript 开发规范

## 类型检查
- 启用严格模式，严格遵循类型检查
- 为所有函数参数和返回值提供类型注解
- 使用接口 (interface) 定义对象类型
- 避免使用 `any` 类型，必要时使用 `unknown`
- 使用泛型提高代码复用性

## Vue 组件类型定义
- 为 Vue 组件的 props 和 emits 提供完整的类型定义
- 使用 TypeScript 的严格类型检查
- 正确定义组件的 ref 类型
- 使用类型断言时要谨慎，优先使用类型守卫

## 类型组织
- 使用 `types/` 目录存放全局类型定义
- 将复杂的类型定义抽取到单独的文件
- 使用命名空间组织相关的类型定义
- 导出公共接口和类型供其他模块使用

## 最佳实践
- 优先使用类型推断，避免冗余的类型注解
- 使用联合类型和交叉类型提高类型表达力
- 合理使用条件类型和映射类型
- 为第三方库提供类型声明文件
